ekf_filter_node:
  ros__parameters:
    # Core
    frequency: 30.0
    two_d_mode: true
    publish_tf: true
    publish_acceleration: true
    sensor_timeout: 0.1
    print_diagnostics: true

    # Frames
    map_frame: map
    odom_frame: odom
    base_link_frame: base_link
    world_frame: odom        # keep 'odom' since we're not fusing GPS

    # ========== Wheel Odometry ==========
    # Use position (x,y) and forward velocity (vx) from /odom.
    # Do NOT fuse yaw from odom (IMU provides yaw). No vyaw from odom either.
    odom0: /odom
    odom0_config: [true,  true,  false,   # x, y, z
                   false, false, true,   # roll, pitch, yaw
                   true,  false, false,   # vx, vy, vz
                   false, false, false,   # vroll, vpitch, vyaw
                   false, false, false]   # ax, ay, az
    odom0_differential: false
    odom0_relative: false
    odom0_queue_size: 5
    odom0_nodelay: false

    # ========== IMU ==========
    # Fuse yaw (orientation), gyro (angular velocities), and planar accel (ax, ay).
    imu0: /imu/data
    imu0_config: [false, false, false,   # position
                  false, false, false,    # orientation: yaw only
                  false, false, false,   # linear velocities
                  false,  false,  true,    # angular velocities (roll/pitch/yaw rates)
                  false,  false,  false]   # linear accel (x, y)
    imu0_differential: false
    imu0_relative: false
    imu0_remove_gravitational_acceleration: true
    imu0_queue_size: 10
    imu0_nodelay: false

    # Optional: if your IMU orientation is already ENU and zeroed at start, leave as is.
    # If you need to yaw-align at startup (rare in sim), you can enable:
    # initial_yaw: 0.0